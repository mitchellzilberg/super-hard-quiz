{"version":3,"sources":["App.js","index.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","className","length","onClick","window","location","reload","map","answerOption","nextQuestion","handleAnswerButtonClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAEe,SAASA,IACvB,IAAMC,EAAY,CACjB,CACCC,aAAc,iCACdC,cAAe,CACd,CAAEC,WAAY,WAAYC,WAAW,GACrC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,KAGrC,CACCH,aAAc,uBACdC,cAAe,CACd,CAAEC,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,aAAcC,WAAW,KAGzC,CACCH,aAAc,2CACdC,cAAe,CACd,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,YAAaC,WAAW,KAGxC,CACCH,aAAc,yCACdC,cAAe,CACd,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,KAGhC,CACCH,aAAc,4CACdC,cAAe,CACd,CAAEC,WAAY,gBAAiBC,WAAW,GAC1C,CAAED,WAAY,cAAeC,WAAW,GACxC,CAAED,WAAY,kBAAmBC,WAAW,GAC5C,CAAED,WAAY,gBAAiBC,WAAW,MA5ChB,EAiDiBC,mBAAS,GAjD1B,mBAiDtBC,EAjDsB,KAiDLC,EAjDK,OAkDKF,oBAAS,GAlDd,mBAkDtBG,EAlDsB,KAkDXC,EAlDW,OAmDHJ,mBAAS,GAnDN,mBAmDtBK,EAnDsB,KAmDfC,EAnDe,KAsE7B,OACC,qBAAKC,UAAU,MAAf,SACEJ,EACA,mCACC,sBAAKI,UAAU,gBAAf,UAA+B,4CAAeF,EAAf,WAA8BV,EAAUa,UACvE,wBAAQC,QATqB,WAChCC,OAAOC,SAASC,UAQb,0BAKD,qCACC,sBAAKL,UAAU,mBAAf,UACC,sBAAKA,UAAU,iBAAf,UACC,6CAAgBN,EAAkB,KADnC,IAC8CN,EAAUa,UAExD,qBAAKD,UAAU,gBAAf,SAAgCZ,EAAUM,GAAiBL,kBAE5D,qBAAKW,UAAU,iBAAf,SACEZ,EAAUM,GAAiBJ,cAAcgB,KAAI,SAACC,GAAD,OAC7C,wBAAQL,QAAS,kBApCS,SAACV,IACf,IAAdA,GACFO,EAASD,EAAQ,GAGlB,IAAMU,EAAed,EAAkB,EACpCc,EAAepB,EAAUa,OAC3BN,EAAmBa,GAEnBX,GAAa,GA2BaY,CAAwBF,EAAaf,YAA3D,SAAwEe,EAAahB,uBCtF5FmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACzB,EAAD,MAEF0B,SAASC,eAAe,U","file":"static/js/main.63e5205a.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function App() {\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of France?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Harry Potter books are there?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who has the most games played in the NHL?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Sidney Crosby', isCorrect: false },\n\t\t\t\t{ answerText: 'Gordie Howe', isCorrect: false },\n\t\t\t\t{ answerText: 'Patrick Marleau', isCorrect: true },\n\t\t\t\t{ answerText: 'Wayne Gretzky', isCorrect: false },\n\t\t\t],\n\t\t},\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\n\tconst handleAnswerButtonClick = (isCorrect) => {\n\t\tif(isCorrect === true){\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif(nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t}\n\n\tconst handleRestartButtonClick = () => {\n\t\twindow.location.reload();\n\t}\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t{showScore ? (\n\t\t\t\t<>\n\t\t\t\t\t<div className='score-section'><p>You scored {score} out of {questions.length}</p>\n\t\t\t\t\t<button onClick={handleRestartButtonClick}>Restart</button></div>\n\n\t\t\t\t</>\n\t\t\t\t\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) =>(\n\t\t\t\t\t\t\t<button onClick={()=> handleAnswerButtonClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}